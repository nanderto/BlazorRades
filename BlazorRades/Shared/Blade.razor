<div id="@Id" class="blade-blade-element" ref="BlazorRade">
    <header>
        <h2 id="title">@Title</h2>
        <small id="sub-title">@SubTitle</small>

        @if (!string.IsNullOrEmpty(Icon))
        {
            <div id="icon">@Icon</div>
        }
        else
        {
            <img src="@IconPath" />
        }

        @if (HeaderButtons == HeaderButtons.Close)
        {
            <button @onclick="CloseBlade" id="close">X</button>
        }
        else if (HeaderButtons == HeaderButtons.SaveAndClose)
        {
            <button id="Save" @onclick="SaveBlade">S</button>
            <button id="close" @onclick="CloseBlade">X</button>
        }
        else if (HeaderButtons == HeaderButtons.SaveCloseAndAdd)
        {
            <button id="Add" @onclick="AddBlade">➕</button>
            <button id="Save" @onclick="SaveBlade">S</button>
            <button id="close" @onclick="CloseBlade">X</button>
        }

    </header>
    <div class="blade-command-bar-element">
        @TopCommandBars
    </div>
    <div id="bladecontent">
        @Content
    </div>
    <div class="blade-command-bar-element">
        @BottomCommandBars
    </div>
</div>


@code {

    [Parameter] public List<BladeInfo> BladeInfos { get; set; }

    [Parameter] public Type Type { get; set; }

    [Parameter] public int Order { get; set; }

    [Parameter] public string Id { get; set; }

    [Parameter] public string Icon { get; set; }

    [Parameter] public string IconPath { get; set; }

    [Parameter] public string Title { get; set; }

    [Parameter] public string SubTitle { get; set; }

    [Parameter] public HeaderButtons HeaderButtons { get; set; }

    [Parameter] public RenderFragment TopCommandBars { get; set; }

    [Parameter] public RenderFragment BottomCommandBars { get; set; }

    [Parameter] public string SaveButtonPath { get; set; }

    [Parameter] public RenderFragment Content { get; set; }

    [Parameter] public EventCallback<MouseEventArgs> AddBlade { get; set; }

    [Parameter] public EventCallback<MouseEventArgs> SaveBlade { get; set; }

    [Parameter] public Dictionary<string, EventCallback<MouseEventArgs>> CallBackCollection { get; set; }

    [Parameter] public EventCallback<string> ReFreshRequested { get; set; }

    ElementReference BlazorRade;

    protected async void CloseBlade()
    {
        await ReFreshRequested.InvokeAsync(Id);
    }
}