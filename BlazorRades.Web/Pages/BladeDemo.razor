@page "/BladeDemo"
<h3>BladeDemo</h3>
<br />
<h4>@messageText</h4>
<div class="flex-container">
<div style="position:relative;height:100%;flex-grow: 100">
    <BladeContainer BladeInfos="@bladeInfos">
        <CommandBars>
            <button class="blade-command-bar-element-button" @onclick="CloseBlade"> Close</button>
            <button class="blade-command-bar-element-button" @onclick="AddBlade2">➕ Add</button>
        </CommandBars>
        <Content>
            <div>
                THis is the initial content of Blade1
                <br />
                yada
                <br />
                yada
                <br />
                yada
                <br />
            </div>
        </Content>

    </BladeContainer>
</div>
    </div>

@code  {
    List<BladeInfo> bladeInfos;

    protected override void OnInitialized()
    {
        bladeInfos = GetBladeOne();
    }


    public List<BladeInfo> GetBladeOne()
    {
        List<BladeInfo> blades = new List<BladeInfo>();
        blades.Add(new BladeInfo
        {
            Id = "blade1",
            Type= typeof(Blade),
            Order = 1,
            Title = "this Is Blade1",
            SubTitle = "it is a generic Blade",
            HeaderButtons = HeaderButtons.Close,
            Icon = "🧪",
            IconPath = string.Empty,
            SaveButtonPath = string.Empty
        });

        return blades;
    }

    private string messageText;

    private void AddBlade2(MouseEventArgs e)
    {
        messageText = "Trying to add a new Procedure and scoring blade";

        int currentCount = bladeInfos.Count;
        int LastInOrder = bladeInfos[currentCount - 1].Order;
        bladeInfos.Add(new BladeInfo
        {
            Id = $"blade{LastInOrder + 1}",
            Type= typeof(ProcedureAndScoring),
            Order = LastInOrder + 1,
        });
    }

    public void CloseBlade(MouseEventArgs e)
    {
        messageText = "Blaze a new trail with Blazor!";

        //Bladeinfos.Remove(BladeInfos[0]);
    }
}